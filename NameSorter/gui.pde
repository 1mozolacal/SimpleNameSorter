/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void txtDisplay_change1(GTextArea source, GEvent event) { //_CODE_:txtDisplay:607662:
  println("textarea1 - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:txtDisplay:607662:

public void enterTxt_change1(GTextField source, GEvent event) { //_CODE_:enterTxt:716160:
  println("EnterTxt - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:enterTxt:716160:

public void EnterBut_click1(GButton source, GEvent event) { //_CODE_:enterBut:976482:
  println("enterBut - GButton >> GEvent." + event + " @ " + millis());
  addName(enterTxt.getText());
  writeToTextArea();
  if(clearOnSub.isSelected()){
    enterTxt.setText("");
  }
} //_CODE_:enterBut:976482:

public void dropListSort_click1(GDropList source, GEvent event) { //_CODE_:dropListSort:745565:
  println("dropListSort - GDropList >> GEvent." + event + " @ " + millis());
  writeToTextArea();
} //_CODE_:dropListSort:745565:

public void printBut_click1(GButton source, GEvent event) { //_CODE_:printBut:910336:
  println("printBut - GButton >> GEvent." + event + " @ " + millis());
  printNames();
} //_CODE_:printBut:910336:

public void clearOnSub_clicked1(GCheckbox source, GEvent event) { //_CODE_:clearOnSub:940871:
  println("clearOnSub - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:clearOnSub:940871:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  txtDisplay = new GTextArea(this, 23, 90, 293, 203, G4P.SCROLLBARS_VERTICAL_ONLY);
  txtDisplay.setOpaque(true);
  txtDisplay.addEventHandler(this, "txtDisplay_change1");
  enterTxt = new GTextField(this, 24, 33, 204, 33, G4P.SCROLLBARS_NONE);
  enterTxt.setPromptText("First Last");
  enterTxt.setOpaque(true);
  enterTxt.addEventHandler(this, "enterTxt_change1");
  enterBut = new GButton(this, 249, 30, 80, 30);
  enterBut.setText("Enter");
  enterBut.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  enterBut.addEventHandler(this, "EnterBut_click1");
  dropListSort = new GDropList(this, 343, 96, 99, 100, 3);
  dropListSort.setItems(loadStrings("list_745565"), 0);
  dropListSort.addEventHandler(this, "dropListSort_click1");
  printBut = new GButton(this, 345, 30, 80, 30);
  printBut.setText("Print Names");
  printBut.addEventHandler(this, "printBut_click1");
  label1 = new GLabel(this, 347, 71, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Sort Options");
  label1.setOpaque(false);
  clearOnSub = new GCheckbox(this, 25, 69, 202, 20);
  clearOnSub.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  clearOnSub.setText("Clear on Submition?");
  clearOnSub.setOpaque(false);
  clearOnSub.addEventHandler(this, "clearOnSub_clicked1");
  clearOnSub.setSelected(true);
}

// Variable declarations 
// autogenerated do not edit
GTextArea txtDisplay; 
GTextField enterTxt; 
GButton enterBut; 
GDropList dropListSort; 
GButton printBut; 
GLabel label1; 
GCheckbox clearOnSub; 